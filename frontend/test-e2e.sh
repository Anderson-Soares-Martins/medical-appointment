#!/bin/bash

# üß™ Script Simples para Execu√ß√£o de Testes E2E
# 
# Como usar:
# ./test-e2e.sh [full|critical|quick|auth|patient|doctor]

echo "üß™ Executando Testes E2E - MedConsult"
echo "========================================"

# Define os conjuntos de testes
FULL_TESTS="cypress/e2e/auth/auth_login_valid.cy.js,cypress/e2e/auth/auth_register_patient.cy.js,cypress/e2e/auth/auth_invalid_credentials.cy.js,cypress/e2e/app/doctors.cy.js,cypress/e2e/appointments/appointment_schedule.cy.js,cypress/e2e/app/appointments.cy.js,cypress/e2e/app/doctor_dashboard.cy.js,cypress/e2e/app/doctor_today_appointments.cy.js,cypress/e2e/app/doctor_appointments.cy.js,cypress/e2e/app/doctor_history.cy.js,cypress/e2e/app/doctor_patients.cy.js,cypress/e2e/app/patients.cy.js"

CRITICAL_TESTS="cypress/e2e/auth/auth_login_valid.cy.js,cypress/e2e/appointments/appointment_schedule.cy.js,cypress/e2e/app/doctor_dashboard.cy.js,cypress/e2e/app/doctor_today_appointments.cy.js"

QUICK_TESTS="cypress/e2e/auth/auth_login_valid.cy.js,cypress/e2e/app/doctors.cy.js,cypress/e2e/appointments/appointment_schedule.cy.js"

AUTH_TESTS="cypress/e2e/auth/auth_login_valid.cy.js,cypress/e2e/auth/auth_register_patient.cy.js,cypress/e2e/auth/auth_invalid_credentials.cy.js"

PATIENT_TESTS="cypress/e2e/auth/auth_login_valid.cy.js,cypress/e2e/app/doctors.cy.js,cypress/e2e/appointments/appointment_schedule.cy.js,cypress/e2e/app/appointments.cy.js"

DOCTOR_TESTS="cypress/e2e/auth/auth_login_valid.cy.js,cypress/e2e/app/doctor_dashboard.cy.js,cypress/e2e/app/doctor_today_appointments.cy.js,cypress/e2e/app/doctor_appointments.cy.js,cypress/e2e/app/doctor_history.cy.js,cypress/e2e/app/doctor_patients.cy.js"

# Fun√ß√£o para mostrar ajuda
show_help() {
  echo ""
  echo "üìã USO:"
  echo "  ./test-e2e.sh [TIPO]"
  echo ""
  echo "üéØ TIPOS DE TESTE:"
  echo "  full        Executa todos os testes (padr√£o)"
  echo "  critical    Executa testes cr√≠ticos"
  echo "  quick       Executa testes b√°sicos"
  echo "  auth        Executa apenas autentica√ß√£o"
  echo "  patient     Executa jornada do paciente"
  echo "  doctor      Executa jornada do m√©dico"
  echo ""
  echo "üìù EXEMPLOS:"
  echo "  ./test-e2e.sh full"
  echo "  ./test-e2e.sh critical"
  echo "  ./test-e2e.sh quick"
  echo ""
}

# Pega o tipo de teste (padr√£o: full)
TEST_TYPE=${1:-full}

# Verifica se √© pedido de ajuda
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
  show_help
  exit 0
fi

# Seleciona os testes baseado no tipo
case $TEST_TYPE in
  "full")
    TESTS=$FULL_TESTS
    echo "üß™ Executando TODOS os testes (15-20 min)"
    ;;
  "critical")
    TESTS=$CRITICAL_TESTS
    echo "‚ö° Executando testes CR√çTICOS (5-8 min)"
    ;;
  "quick")
    TESTS=$QUICK_TESTS
    echo "üöÄ Executando testes R√ÅPIDOS (3-5 min)"
    ;;
  "auth")
    TESTS=$AUTH_TESTS
    echo "üîê Executando testes de AUTENTICA√á√ÉO (3-5 min)"
    ;;
  "patient")
    TESTS=$PATIENT_TESTS
    echo "üë§ Executando jornada do PACIENTE (8-12 min)"
    ;;
  "doctor")
    TESTS=$DOCTOR_TESTS
    echo "üë®‚Äç‚öïÔ∏è Executando jornada do M√âDICO (10-15 min)"
    ;;
  *)
    echo "‚ùå Tipo de teste inv√°lido: $TEST_TYPE"
    show_help
    exit 1
    ;;
esac

echo "========================================"
echo ""

# Executa os testes
echo "üöÄ Executando: npx cypress run --spec \"$TESTS\""
echo ""

npx cypress run --spec "$TESTS"

# Verifica se os testes foram executados com sucesso
if [ $? -eq 0 ]; then
  echo ""
  echo "‚úÖ Todos os testes executados com sucesso!"
  echo ""
  echo "üìä RESUMO:"
  echo "   Tipo: $TEST_TYPE"
  echo "   Status: ‚úÖ SUCESSO"
else
  echo ""
  echo "‚ùå Alguns testes falharam!"
  echo ""
  echo "üîß TROUBLESHOOTING:"
  echo "1. Verifique se o servidor est√° rodando: npm run dev"
  echo "2. Instale depend√™ncias: npm install"
  echo "3. Verifique se o Cypress est√° configurado"
  echo ""
  exit 1
fi 